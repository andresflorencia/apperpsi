<resources>
    <string name="app_name">SI Móvil</string>

    <string name="lblLogin">Inicio de Sesión</string>
    <string name="lblConfirmePin">Confirme Pin</string>
    <string name="lblIngresePin">Ingrese Nuevo Pin</string>
    <string name="lblBlancoLogin">   </string>
    <string name="GPSAlertDialogTitle">Configuración GPS</string>
    <string name="GPSAlertDialogMessage">Por favor active los servicios de Ubicación</string>
    <string name="drawer_open">Open</string>
    <string name="drawer_close">Close</string>

    <string name="dbUsuario">
        CREATE TABLE IF NOT EXISTS usuario(
            idusuario integer primary key,
            razonsocial varchar(128),
            usuario varchar(50),
            clave varchar(128),
            autorizacion integer,
            pin varchar(4),
            perfil integer,
            sucursalid integer,
            CONSTRAINT usuario_pin UNIQUE(idusuario,pin)
        );
        ALTER TABLE usuario ADD COLUMN parroquiaid integer DEFAULT 0;
        ALTER TABLE usuario ADD COLUMN nombreperfil varchar(50) DEFAULT \'\';
        ALTER TABLE usuario ADD COLUMN nip varchar(20) DEFAULT \'\';
    </string>

    <string name="dbSucursal">
        CREATE TABLE IF NOT EXISTS sucursal(
            idsucursal varchar(20) primary key,
            ruc varchar(20),
            razonsocial varchar(128),
            nombrecomercial varchar(128),
            nombresucursal varchar(128),
            direccion varchar(128),
            codigoestablecimiento varchar(3),
            puntoemision varchar(3),
            ambiente integer,
            sucursalpadreid varchar(20),
            idestablecimiento integer
        );
        ALTER TABLE sucursal ADD COLUMN idpuntoemision integer DEFAULT 0;
        ALTER TABLE sucursal ADD COLUMN periodo integer DEFAULT 0;
        ALTER TABLE sucursal ADD COLUMN mesactual integer DEFAULT 0;
        ALTER TABLE sucursal ADD COLUMN usuarioid integer DEFAULT 0;
    </string>

    <string name="dbSecuencial">
        CREATE TABLE IF NOT EXISTS secuencial (
            sucursalid varchar(20),
            tipocomprobante varchar(2),
            codigoestablecimiento varchar(3),
            puntoemision varchar(3),
            secuencial integer,
            constraint pksecuencial primary key (sucursalid, tipocomprobante, codigoestablecimiento, puntoemision)
        );
    </string>

    <string name="dbProducto">
        CREATE TABLE IF NOT EXISTS producto(
            idproducto integer PRIMARY KEY,
            codigoproducto varchar(100),
            nombreproducto varchar(250),
            pvp double,
            unidadid integer,
            unidadesporcaja integer,
            iva integer,
            ice integer,
            factorconversion double,
            pvp1 double,
            pvp2 double,
            pvp3 double,
            pvp4 double,
            pvp5 double,
            stock double,
            porcentajeiva double
        );
        ALTER TABLE producto ADD COLUMN establecimientoid INTEGER DEFAULT 0;
        ALTER TABLE producto ADD COLUMN tipo VARCHAR(5) DEFAULT \'P\';
        ALTER TABLE producto ADD COLUMN clasificacionid INTEGER DEFAULT 0;
        ALTER TABLE producto ADD COLUMN nombreclasificacion VARCHAR(50) DEFAULT \'Sin clasificación\';
        ALTER TABLE producto ADD COLUMN descuento DOUBLE DEFAULT 0;
    </string>

    <string name="dbCliente">
        CREATE TABLE IF NOT EXISTS cliente(
            idcliente INTEGER PRIMARY KEY AUTOINCREMENT,
            tiponip varchar(2),
            nip varchar(20),
            razonsocial varchar(200),
            nombrecomercial varchar(200),
            direccion text,
            lat double,
            lon double,
            categoria varchar(1),
            usuarioid integer,
            fono1 varchar(20),
            fono2 varchar(20),
            email varchar(100),
            observacion text,
            ruc varchar(20),
            codigosistema integer,
            actualizado integer,
            CONSTRAINT uknip UNIQUE(nip, usuarioid)
        );
        ALTER TABLE cliente ADD COLUMN establecimientoid INTEGER DEFAULT 0;
        ALTER TABLE cliente ADD COLUMN parroquiaid INTEGER DEFAULT 0;
        ALTER TABLE cliente ADD COLUMN fecharegistro VARCHAR(25) DEFAULT \'\';
        ALTER TABLE cliente ADD COLUMN fechamodificacion VARCHAR(25) DEFAULT \'\';
        ALTER TABLE cliente ADD COLUMN longdater INTEGER DEFAULT 0;
        ALTER TABLE cliente ADD COLUMN longdatem INTEGER DEFAULT 0;
        ALTER TABLE cliente ADD COLUMN nombrecategoria VARCHAR(100) DEFAULT \'\';
        ALTER TABLE cliente ADD COLUMN montocredito DOUBLE DEFAULT 0;
        ALTER TABLE cliente ADD COLUMN deudatotal DOUBLE DEFAULT 0;
        ALTER TABLE cliente ADD COLUMN plazomaximo INTEGER DEFAULT 0;
    </string>

    <string name="dbLote">
        CREATE TABLE IF NOT EXISTS lote (
            productoid INTEGER,
            numerolote VARCHAR(150),
            stock DOUBLE,
            preciocosto DOUBLE,
            fechavencimiento varchar(15)
        );
        ALTER TABLE lote ADD COLUMN longdate INTEGER DEFAULT 0;
        ALTER TABLE lote ADD COLUMN establecimientoid INTEGER DEFAULT 0;
    </string>

    <string name="dbComprobante">
        CREATE TABLE IF NOT EXISTS comprobante(
            idcomprobante INTEGER PRIMARY KEY AUTOINCREMENT,
            establecimientoid INTEGER,
            clienteid INTEGER,
            usuarioid INTEGER,
            codigosistema INTEGER DEFAULT 0,
            codigotransaccion VARCHAR(25),
            tipotransaccion VARCHAR(2),
            fechacelular VARCHAR(20),
            fechadocumento VARCHAR(20),
            observacion TEXT,
            subtotal DOUBLE,
            subtotaliva DOUBLE,
            descuento DOUBLE,
            porcentajeiva DOUBLE,
            total DOUBLE,
            estado INTEGER,
            lat DOUBLE,
            lon DOUBLE,
            claveacceso VARCHAR(49),
            secuencial INTEGER DEFAULT 0,
            nip VARCHAR(20),
            CONSTRAINT ukautorizacion UNIQUE(claveacceso)
        );
        ALTER TABLE comprobante ADD COLUMN sucursalenvia TEXT DEFAULT \'\';
        ALTER TABLE comprobante ADD COLUMN sucursalrecibe TEXT DEFAULT \'\';
        ALTER TABLE comprobante ADD COLUMN longdate INTEGER DEFAULT 0;
        ALTER TABLE comprobante ADD COLUMN formapago INTEGER DEFAULT 1;
        ALTER TABLE comprobante ADD COLUMN establecimientoprecioid INTEGER DEFAULT 0;
        ALTER TABLE comprobante ADD COLUMN responsableid INTEGER DEFAULT 0;
        ALTER TABLE comprobante ADD COLUMN estadoresponsable VARCHAR(2) DEFAULT \'\';
        ALTER TABLE comprobante ADD COLUMN nombreresponsable VARCHAR(150) DEFAULT \'\';
    </string>

    <string name="dbDetalleComprobante">
        CREATE TABLE IF NOT EXISTS detallecomprobante(
            comprobanteid INTEGER,
            linea INTEGER,
            productoid INTEGER,
            cantidad DOUBLE,
            total DOUBLE,
            precio DOUBLE,
            numerolote VARCHAR(30),
            fechavencimiento VARCHAR(20),
            stock DOUBLE,
            preciocosto DOUBLE
        );
        ALTER TABLE detallecomprobante ADD COLUMN precioreferencia DOUBLE DEFAULT 0;
        ALTER TABLE detallecomprobante ADD COLUMN valoriva DOUBLE DEFAULT 0;
        ALTER TABLE detallecomprobante ADD COLUMN valorice DOUBLE DEFAULT 0;
        ALTER TABLE detallecomprobante ADD COLUMN descuento DOUBLE DEFAULT 0;
        ALTER TABLE detallecomprobante ADD COLUMN codigoproducto VARCHAR(100) DEFAULT \'\';
        ALTER TABLE detallecomprobante ADD COLUMN nombreproducto VARCHAR(250) DEFAULT \'\';
        ALTER TABLE detallecomprobante ADD COLUMN marquetas DOUBLE DEFAULT 0;
        ALTER TABLE detallecomprobante ADD COLUMN porcentajedesc DOUBLE DEFAULT 0;
    </string>

    <string name="dbPedido">
        CREATE TABLE IF NOT EXISTS pedido(
            idpedido INTEGER PRIMARY KEY AUTOINCREMENT,
            codigosistema INTEGER,
            clienteid INTEGER,
            estado INTEGER,
            usuarioid INTEGER,
            parroquiaid INTEGER,
            establecimientoid INTEGER,
            secuencial INTEGER,
            fechapedido VARCHAR(20),
            fechacelular VARCHAR(20),
            observacion TEXT,
            categoria VARCHAR(2),
            secuencialpedido VARCHAR(25),
            nip VARCHAR(20),
            total DOUBLE,
            subtotal DOUBLE,
            subtotaliva DOUBLE,
            porcentajeiva DOUBLE,
            descuento DOUBLE,
            lat DOUBLE,
            lon DOUBLE,
            codigoestablecimiento VARCHAR(5),
            puntoemision VARCHAR(5),
            tipotransaccion VARCHAR(2),
            CONSTRAINT uksecuencial UNIQUE(usuarioid, clienteid, secuencialpedido)
        );
        ALTER TABLE pedido ADD COLUMN longdate INTEGER DEFAULT 0;
        ALTER TABLE pedido ADD COLUMN secuencialsistema VARCHAR(20) DEFAULT \'\';
    </string>
    <string name="dbDetallePedido">
        CREATE TABLE IF NOT EXISTS detallepedido(
            pedidoid INTEGER,
            orden INTEGER,
            cantidad DOUBLE,
            factorconversion DOUBLE,
            precio DOUBLE,
            idproducto INTEGER,
            observacion TEXT,
            usuarioid INTEGER
        );
        ALTER TABLE detallepedido ADD COLUMN porcentajeiva DOUBLE DEFAULT 0;
        ALTER TABLE detallepedido ADD COLUMN codigoproducto  VARCHAR(150) DEFAULT \'\';
        ALTER TABLE detallepedido ADD COLUMN nombreproducto  VARCHAR(250) DEFAULT \'\';
        ALTER TABLE detallepedido ADD COLUMN descuento DOUBLE DEFAULT 0;
        ALTER TABLE detallepedido ADD COLUMN porcentajedesc DOUBLE DEFAULT 0;
    </string>

    <string name="dbPermiso">
        CREATE TABLE IF NOT EXISTS permiso(
            nombreopcion VARCHAR(150),
            perfilid INTEGER,
            opcionid INTEGER,
            permisoescritura VARCHAR(10),
            permisoimpresion VARCHAR(10),
            permisomodificacion VARCHAR(10),
            permisoborrar VARCHAR(10),
            permisosubirarchivo VARCHAR(10)
        );
        ALTER TABLE permiso ADD COLUMN rutaopcion VARCHAR(150) DEFAULT \'\';
    </string>
    <string name="dbConfig">
        CREATE TABLE IF NOT EXISTS configuracion(
            idconfiguracion INTEGER PRIMARY KEY AUTOINCREMENT,
            urlbase VARCHAR(250),
            ssl INTEGER DEFAULT 0
        );
    </string>
    <string name="dbReglaPrecio">
        CREATE TABLE IF NOT EXISTS reglaprecio(
            idproductoregla INTEGER PRIMARY KEY,
            productoid INTEGER,
            establecimientoid INTEGER,
            cantidad DOUBLE,
            numerolote VARCHAR(100),
            fechamaxima VARCHAR(25),
            precio DOUBLE
        );
        ALTER TABLE reglaprecio ADD COLUMN longdate INTEGER DEFAULT 0;
    </string>

    <string name="dbPrecioCategoria">
        CREATE TABLE IF NOT EXISTS preciocategoria(
            idproductocategoria INTEGER PRIMARY KEY,
            productoid INTEGER,
            establecimientoid INTEGER,
            categoriaid INTEGER,
            valor DOUBLE,
            nombrecategoria VARCHAR(100),
            prioridad VARCHAR(5),
            aplicacredito VARCHAR(5)
        );
    </string>

    <string name="dbProvincia">
        CREATE TABLE IF NOT EXISTS provincia(
            idprovincia integer,
            nombreprovincia varchar(100),
            CONSTRAINT ukprovincia UNIQUE(idprovincia)
        );
    </string>
    <string name="dbCanton">
        CREATE TABLE IF NOT EXISTS canton(
            idcanton integer,
            nombrecanton varchar(100),
            provinciaid integer,
            CONSTRAINT ukcanton UNIQUE(idcanton)
        );
    </string>
    <string name="dbParroquia">
        CREATE TABLE IF NOT EXISTS parroquia(
            idparroquia integer,
            nombreparroquia varchar(100),
            cantonid integer,
            CONSTRAINT ukparroquia UNIQUE(idparroquia)
        );
    </string>

    <string name="dbPedidoInv">
        CREATE TABLE IF NOT EXISTS pedidoinv(
            idpedido INTEGER PRIMARY KEY AUTOINCREMENT,
            codigosistema INTEGER,
            establecimientoid INTEGER,
            usuarioid INTEGER,
            diasabastecimiento INTEGER DEFAULT 7,
            estadomovil INTEGER DEFAULT 0,
            secuencial INTEGER,
            codigopedido VARCHAR(50),
            fecharegistro VARCHAR(25),
            fechahora VARCHAR(25),
            estado VARCHAR(2) DEFAULT \'P\',
            observacion VARCHAR(250),
            longdate INTEGER DEFAULT 0,
            tipotransaccion VARCHAR(5),
            CONSTRAINT uksecuencial UNIQUE(usuarioid, establecimientoid, codigopedido, estado)
        );
    </string>
    <string name="dbDetallePedidoInv">
        CREATE TABLE IF NOT EXISTS detallepedidoinv(
            pedidoid INTEGER,
            orden INTEGER,
            productoid INTEGER,
            cantidadpedida DOUBLE,
            cantidadautorizada DOUBLE,
            stockactual DOUBLE,
            usuarioid INTEGER,
            codigoproducto VARCHAR(100),
            nombreproducto VARCHAR(250)
        );
    </string>

    <string name="dbUbicacion">
        CREATE TABLE IF NOT EXISTS ubicacion(
            idubicacion INTEGER PRIMARY KEY AUTOINCREMENT,
            usuarioid INTEGER,
            lat DOUBLE,
            lon DOUBLE,
            estado INTEGER DEFAULT 0,
            fechaapp VARCHAR(25),
            rucempresa VARCHAR(25)
        );
    </string>

    <string name="dbCatalogo">
        CREATE TABLE IF NOT EXISTS catalogo(
            idcatalogo integer,
            codigocatalogo varchar(50),
            nombrecatalogo varchar(150),
            codigopadre varchar(50),
            cuentaid integer,
            CONSTRAINT ukcatalogo UNIQUE(codigocatalogo, nombrecatalogo, codigopadre)
        );
        ALTER TABLE catalogo ADD COLUMN entidadfinancieracodigo INTEGER DEFAULT 0;
    </string>

    <string name="dbFotos">
        CREATE TABLE IF NOT EXISTS foto(
            idfoto integer primary key autoincrement,
            personaid integer,
            documentoid integer,
            name text,
            path text,
            tipo varchar(1),
            CONSTRAINT ukfoto UNIQUE (personaid,documentoid,tipo,name)
        );
    </string>

    <string name="dbIngreso">
        CREATE TABLE IF NOT EXISTS ingreso(
            idingreso INTEGER PRIMARY KEY AUTOINCREMENT,
            codigosistema INTEGER,
            estado INTEGER,
            carterafaltante INTEGER,
            personaid INTEGER,
            usuarioid INTEGER,
            establecimientoid INTEGER,
            secuencial INTEGER,
            tipo INTEGER,
            formadepagoid INTEGER,
            totalingreso DOUBLE,
            fechadiario VARCHAR(25),
            fechacelular VARCHAR(25),
            secuencialdocumento VARCHAR(30),
            longdater INTEGER,
            observacion TEXT,
            CONSTRAINT ukingreso UNIQUE (personaid, establecimientoid, fechadiario, fechacelular, estado)
        );
    </string>
    <string name="dbDetalleIngreso">
        CREATE TABLE IF NOT EXISTS detalleingreso(
            ingresoid INTEGER,
            linea INTEGER,
            monto DOUBLE,
            numerodocumentoreferencia VARCHAR(25),
            fechadocumento VARCHAR(25),
            entidadfinancieracodigo VARCHAR(10),
            tipodecuenta VARCHAR(1),
            niptitular VARCHAR(15),
            razonsocialtitular VARCHAR(150),
            tipodocumento INTEGER,
            fechadiario VARCHAR(25),
            tipo INTEGER
        );
    </string>

    <string name="dbVersion">
        CREATE TABLE IF NOT EXISTS version(
            idversion integer,
            version varchar(100),
            link varchar(250),
            requerida varchar(1),
            instalada verchar(1),
            CONSTRAINT ukcanton UNIQUE(idversion)
        );
    </string>

    <string name="dbRetencion">
        CREATE TABLE IF NOT EXISTS retencion(
            idretencion INTEGER PRIMARY KEY AUTOINCREMENT,
            comprobanteid INTEGER,
            personaid INTEGER,
            ambiente INTEGER DEFAULT 2,
            tipoemision INTEGER DEFAULT 1,
            origenretencion INTEGER DEFAULT 2,
            numeroautorizacion VARCHAR(50),
            numerodocumento VARCHAR(25),
            periodofiscal VARCHAR(10),
            puntoemision VARCHAR(3),
            establecimiento VARCHAR(3),
            estadosri VARCHAR(1) DEFAULT \'4\',
            fechahora VARCHAR(25),
            usuarioid INTEGER,
            CONSTRAINT ukretencion UNIQUE (numerodocumento, personaid, establecimiento, puntoemision)
        );
    </string>
    <string name="dbDetalleRetencion">
        CREATE TABLE IF NOT EXISTS detalleretencion(
            retencionid INTEGER,
            linea INTEGER,
            codigo VARCHAR(5),
            codigoretencion VARCHAR(5),
            coddocsustento VARCHAR(25) DEFAULT \'01\',
            numdocsustento VARCHAR(25),
            fechaemisiondocumento VARCHAR(25),
            baseimponible DOUBLE DEFAULT 0,
            baseimponibleiva DOUBLE DEFAULT 0,
            porcentajeretener DOUBLE DEFAULT 0,
            porcentajereteneriva DOUBLE DEFAULT 0,
            valorretenido DOUBLE DEFAULT 0,
            valorretenidoiva DOUBLE DEFAULT 0,
            tipo VARCHAR(10)
        );
    </string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="update"><![CDATA[<u>Actualizar</u>]]></string>
    <string name="leyendaConsumidorFinal"><![CDATA[*Si no especifica el cliente, la factura se guardará con <strong>CONSUMIDOR FINAL</strong>]]></string>
    <string name="Cancel">No</string>
    <string name="Confirm">Si</string>

    <string name="textFecha"><![CDATA[<strong>Fecha Registro: </strong>]]></string>
    <string name="textCategoria"><![CDATA[<strong>Categoría: </strong>]]></string>

    <string name="leyendaProforma"><![CDATA[*Este comprobante no tiene validez tributaria.]]></string>
    <string name="leyendaFactura"><![CDATA[*Este comprobante no tiene validez tributaria.
    Puede revisar su factura en <strong>https://comprobantes.sanisidrosa.com/</strong>,
    utilice como usuario y contraseña su número de identificación.]]></string>
    <string name="leyendaFactura2">Este comprobante no tiene validez tributaria.
    Puede revisar su factura en https://comprobantes.sanisidrosa.com/,
    por primera vez utilice como usuario y contraseña su número de identificación.</string>
    <string name="leyendaRestablecer"><![CDATA[¿Desea restablecer los datos de la aplicación?
        <br/><br/><strong>NOTA:</strong> Se perderán todos los datos almacenados hasta el momento.]]></string>
</resources>
